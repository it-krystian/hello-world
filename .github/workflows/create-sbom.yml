name: Generate and Commit Signed SBOM

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "hello-world/pyproject.toml"
      - "hello-world/poetry.lock"
      - "end-world/pyproject.toml"
      - "end-world/poetry.lock"

permissions:
  contents: write
  pull-requests: write

jobs:
  sbom:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"

      - name: Install CycloneDX 7.x
        run: |
          python -m pip install --upgrade pip
          pip install "cyclonedx-bom==7.*"

      - name: Generate SBOMs
        run: |
          mkdir -p sbom
          cyclonedx-py -o sbom/hello-world.json -f JSON poetry --project-dir hello-world
          cyclonedx-py -o sbom/end-world.json   -f JSON poetry --project-dir end-world

      - name: Commit SBOMs to PR branch (Verified via GitHub API)
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const branch = context.payload.pull_request.head.ref;

            for (const file of ['sbom/hello-world.json', 'sbom/end-world.json']) {
              const content = fs.readFileSync(file, { encoding: 'base64' });
              let sha;
              try {
                const { data } = await github.rest.repos.getContent({
                  owner, repo, path: file, ref: branch
                });
                if (!Array.isArray(data)) sha = data.sha;
              } catch (e) {
                // file doesn't exist yet on this branch
              }

              await github.rest.repos.createOrUpdateFileContents({
                owner,
                repo,
                path: file,
                message: `chore(sbom): update ${file}`,
                content,
                branch,
                sha
              });
            }

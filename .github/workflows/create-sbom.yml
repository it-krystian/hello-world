name: Generate and Commit Signed SBOM

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "hello-world/pyproject.toml"
      - "hello-world/poetry.lock"

permissions:
  contents: write
  pull-requests: write

jobs:
  sbom:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"

      - name: Install CycloneDX 7.x
        run: |
          python -m pip install --upgrade pip
          pip install "cyclonedx-bom==7.*"

      - name: Generate SBOM (CycloneDX JSON from Poetry project)
        working-directory: ./hello-world
        run: |
          mkdir -p ../sbom
          cyclonedx-py poetry \
            --output-format JSON \
            --output-file ../sbom/hello-world.json

      - name: Upload SBOM via REST (GitHub-signed commit)
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const { owner, repo } = context.repo;
            const branch = context.payload.pull_request.head.ref;
            const path = 'sbom/hello-world.json';
            const content = fs.readFileSync(path, 'base64');

            let sha;
            try { sha = (await github.rest.repos.getContent({ owner, repo, path, ref: branch })).data.sha; } catch {}

            await github.rest.repos.createOrUpdateFileContents({
              owner, repo, path, branch, sha,
              message: 'chore: add signed SBOM',
              content
            });

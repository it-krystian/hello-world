name: Generate and Commit Signed SBOM

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "hello-world/pyproject.toml"
      - "hello-world/poetry.lock"

permissions:
  contents: write
  pull-requests: write

jobs:
  sbom:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"

      - name: Install CycloneDX 7.x
        run: |
          python -m pip install --upgrade pip
          pip install "cyclonedx-bom==7.*"

      - name: Generate SBOM (CycloneDX JSON from Poetry project)
        working-directory: ./hello-world
        run: |
          mkdir -p ../sbom
          cyclonedx-py poetry \
            --output-format JSON \
            --output-file ../sbom/hello-world.json

      - name: Commit SBOM to PR branch (Verified via GitHub API)
        uses: actions/github-script@v7
        env:
          FILE_PATH: sbom/hello-world.json
        with:
          script: |
            const fs = require('fs');
            const path = process.env.FILE_PATH;

            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const branch = context.payload.pull_request.head.ref;

            // Read file and base64-encode for API
            const content = fs.readFileSync(path, { encoding: 'base64' });

            // Try to get existing file SHA (needed only for updates)
            let sha;
            try {
              const { data } = await github.repos.getContent({
                owner, repo, path, ref: branch
              });
              if (!Array.isArray(data)) sha = data.sha;
            } catch (e) {
              // File doesn't exist yet on this branch â€” that's fine.
            }

            // Create or update the file on the PR head branch
            await github.repos.createOrUpdateFileContents({
              owner,
              repo,
              path,
              message: 'chore(sbom): update hello-world SBOM',
              content,
              branch,
              sha
            });
